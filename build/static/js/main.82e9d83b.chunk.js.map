{"version":3,"sources":["components/NavbarComponent.js","actions/inventoryAction.js","components/TableLoggingFullAccess.js","components/TableLoggingLimited.js","containers/LoggingContainer.js","components/BackComponent.js","validations/InventoryValidation.js","components/FormInventory.js","containers/CreateInventoryContainer.js","containers/EditInventoryContainer.js","components/FormLogging.js","containers/EditLoggingContainer.js","components/DetailLoggingComponent.js","containers/DetailLoggingContainer.js","components/DetailInventoryComponent.js","containers/DetailInventoryContainer.js","components/TableInventoryLimited.js","components/TableInventoryFullAccess.js","containers/InventoryContainer.js","components/ProfilComponent.js","containers/ProfilContainer.js","containers/LoginContainer.js","components/AnalitikComponent.js","containers/AnalitikContainer.js","containers/LogoutContainer.js","containers/my404.js","App.js","serviceWorker.js","reducers/inventorys.js","reducers/index.js","index.js"],"names":["NavbarComponent","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","Container","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","href","NavbarText","UncontrolledDropdown","DropdownToggle","nav","caret","icon","faUser","DropdownMenu","right","DropdownItem","divider","GET_INVENTORY_LIST","GET_INVENTORY_DETAIL","POST_INVENTORY_CREATE","PUT_INVENTORY_EDIT","GET_LOGGING_LIST","PUT_LOGGING_EDIT","GET_LOGGING_DETAIL","url","header","headers","Authorization","localStorage","getItem","getInventoryList","dispatch","axios","get","then","response","console","log","type","payload","data","Inventory","errorMessage","catch","error","message","getLoggingList","logging","getInventoryDetail","logical_uid","deleteLogging","id","delete","getLoggingDetail","SearchBar","Search","defaultSorted","dataField","order","connect","state","inventorys","errorLoggingList","HitungLogging","length","columns","text","sort","headerStyle","width","formatter","rowContent","row","to","Button","faInfo","faEdit","swal","title","buttons","dangerMode","willDelete","faTrash","Row","Col","Card","style","Body","Title","Text","bootstrap4","keyField","search","searchProps","placeholder","baseProps","pagination","paginationFactory","Spinner","LoggingContainer","token","roleuser","loggedin","this","Component","withRouter","history","goBack","faArrowLeft","InventoryValidation","values","errors","name","nama","qty","qrt","renderField","input","label","disabled","readOnly","meta","touched","warning","md","Label","htmlFor","Input","FormInventory","onSubmit","handleSubmit","FormGroup","Field","component","submitting","reduxForm","form","validate","enableReinitialize","initialValues","CreateInventoryContainer","post","postInventoryCreate","getResponDataInventory","errorResponDataInventory","umur","BackComponent","EditInventoryContainer","match","params","put","putInventoryUpdate","FormLogging","warehouse","status","time","EditLoggingContainer","putLoggingUpdate","getResponDataLogging","errorResponDataLogging","errorLoggingDetail","Table","striped","DetailLoggingContainer","errorInventoryDetail","DetailInventoryContainer","errorInventoryList","errorInventorysList","handleClick","deleteInventory","noDataIndication","faPlus","InventoryContainer","ProfilComponent","ProflContainer","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","submit","LoginContainer","e","preventDefault","username","password","res","setItem","user","user_permissions","setState","window","location","reload","err","maxWidth","CssBaseline","Typography","variant","TextField","required","fullWidth","autoComplete","autoFocus","onChange","target","value","HitungInventory","x","y","z","a","b","c","i","AnalitikContainer","LogoutContainer","removeItem","my404","App","path","exact","ProfilContainer","Boolean","hostname","initialState","hitungLogging","action","combineReducers","formReducer","store","createStore","reducer","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82e9d83b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Container,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NavbarComponent = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"black\" light expand=\"md\">\r\n        <Container>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/Logging\">Logging</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"/Analitik\">Analitik</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"/Inventory\">Daftar Inventory</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <NavbarText>\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle nav caret>\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem href=\"/Profil\">Profil</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>About</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem href=\"/Logout\">Logout</DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </NavbarText>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarComponent;\r\n","import axios from \"axios\";\r\n\r\nexport const GET_INVENTORY_LIST = \"GET_INVENTORY_LIST\";\r\nexport const GET_INVENTORY_DETAIL = \"GET_INVENTORY_DETAIL\";\r\nexport const POST_INVENTORY_CREATE = \"POST_INVENTORY_CREATE\";\r\nexport const PUT_INVENTORY_EDIT = \"PUT_INVENTORY_EDIT\";\r\nexport const GET_LOGGING_LIST = \"GET_LOGGING_LIST\";\r\nexport const PUT_LOGGING_EDIT = \"PUT_LOGGING_EDIT\";\r\nexport const GET_LOGGING_DETAIL = \"GET_LOGGING_DETAIL\";\r\n\r\nlet url = \"https://smpnapi.herokuapp.com/api/v3/\";\r\nlet header = {\r\n  headers: {\r\n    Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n  },\r\n};\r\n\r\n//MUNCULIN LIST DATA INVENTORY\r\nexport const getInventoryList = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + \"inventory/\", header)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        dispatch({\r\n          type: GET_INVENTORY_LIST,\r\n          payload: {\r\n            data: response.data.Inventory,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_INVENTORY_LIST,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n//MUNCULIN LIST DATA LOGGING IN ATAU OUT\r\nexport const getLoggingList = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + \"logging/\", header)\r\n      .then(function (response) {\r\n        dispatch({\r\n          type: GET_LOGGING_LIST,\r\n          payload: {\r\n            data: response.data.logging,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_LOGGING_LIST,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n//BUAT DETAIL DATA 1 INVENTORY\r\nexport const getInventoryDetail = (logical_uid) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + \"inventory/detail/\" + logical_uid, header)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        dispatch({\r\n          type: GET_INVENTORY_DETAIL,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_INVENTORY_DETAIL,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const postInventoryCreate = (data) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"inventory/\", data, header)\r\n      .then(function (response) {\r\n        console.log(response);\r\n\r\n        dispatch({\r\n          type: POST_INVENTORY_CREATE,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: POST_INVENTORY_CREATE,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteInventory = (logical_uid) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(url + \"inventory/delete/\" + logical_uid, header)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteDataInventory = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: GET_INVENTORY_DETAIL,\r\n      payload: {\r\n        data: false,\r\n        errorMessage: false,\r\n      },\r\n    });\r\n\r\n    dispatch({\r\n      type: POST_INVENTORY_CREATE,\r\n      payload: {\r\n        data: false,\r\n        errorMessage: false,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\n//update inventory\r\nexport const putInventoryUpdate = (data, id) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .put(url + \"inventory/update/\" +id,data, header\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        \r\n        dispatch({\r\n          type: PUT_INVENTORY_EDIT,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: PUT_INVENTORY_EDIT,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const deleteLogging = (id) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(url + \"logging/delete/\" + id, header)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\n//update logging\r\nexport const putLoggingUpdate = (data, id) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .put(url + \"logging/update/\" + id,data, header\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        \r\n        dispatch({\r\n          type: PUT_LOGGING_EDIT,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: PUT_LOGGING_EDIT,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n//BUAT DETAIL DATA 1 INVENTORY\r\nexport const getLoggingDetail = (id) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + \"logging/detail/\" + id, header)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        dispatch({\r\n          type: GET_LOGGING_DETAIL,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_LOGGING_DETAIL,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faInfo, faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { deleteLogging } from \"../actions/inventoryAction\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoggingList: state.inventorys.getLoggingList,\r\n    errorLoggingList: state.inventorys.errorLoggingList,\r\n    HitungLogging: state.inventorys.getLoggingList.length, //HITUNG JUMLAH DATA LOGGING\r\n  };\r\n};\r\n\r\nconst handleClick = (dispatch, id) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan menghapus data ini ?\",\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deleteLogging(id));\r\n      swal(\"Data Inventory Sukses dihapus\", {\r\n        icon: \"success\",\r\n      });\r\n    } else {\r\n      swal(\"Data gagal dihapus\");\r\n    }\r\n  });\r\n};\r\n\r\nconst { SearchBar } = Search;\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst TableLoggingFullAccess = (props) => {\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { width: \"15%\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"qty\",\r\n      text: \"Jumlah\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"time\",\r\n      text: \"Waktu\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"link\",\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { width: \"30%\" };\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <div>\r\n            <Link to={\"DetailLogging/\" + row.id}>\r\n              <Button color=\"dark\" className=\"mr-2\">\r\n                <FontAwesomeIcon icon={faInfo} /> Detail\r\n              </Button>\r\n            </Link>\r\n\r\n            <Link to={\"EditLogging/\" + row.id}>\r\n              <Button color=\"dark\" className=\"mr-2\">\r\n                <FontAwesomeIcon icon={faEdit} /> Edit\r\n              </Button>\r\n            </Link>\r\n\r\n            <Button\r\n              color=\"dark\"\r\n              className=\"mr-2\"\r\n              onClick={() => handleClick(props.dispatch, row.id)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} /> Delete\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      {props.getLoggingList ? (\r\n        <div>\r\n          <div>\r\n            <Row>\r\n              <Col>\r\n                <Card style={{ width: \"18rem\" }}>\r\n                  <Card.Body className=\"text-center\">\r\n                    <Card.Title>JUMLAH LOGGING</Card.Title>\r\n                    <Card.Text>{props.HitungLogging}</Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <br />\r\n          <ToolkitProvider\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={props.getLoggingList}\r\n            columns={columns}\r\n            defaultSorted={defaultSorted}\r\n            search\r\n          >\r\n            {(props) => (\r\n              <div>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"float-right\">\r\n                      <SearchBar {...props.searchProps} placeholder=\"Cari..\" />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <BootstrapTable\r\n                  {...props.baseProps}\r\n                  pagination={paginationFactory()}\r\n                />\r\n              </div>\r\n            )}\r\n          </ToolkitProvider>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorLoggingList ? (\r\n            <h4>{props.errorLoggingList}</h4>\r\n          ) : (\r\n            <Spinner color=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableLoggingFullAccess);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoggingList: state.inventorys.getLoggingList,\r\n    errorLoggingList: state.inventorys.errorLoggingList,\r\n    HitungLogging: state.inventorys.getLoggingList.length, //HITUNG JUMLAH DATA LOGGING\r\n  };\r\n};\r\n\r\n\r\nconst { SearchBar } = Search;\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst TableLoggingLimited = (props) => {\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { width: \"15%\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"qty\",\r\n      text: \"Jumlah\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"time\",\r\n      text: \"Waktu\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"link\",\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { width: \"15%\" };\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <div>\r\n            <Link to={\"DetailLogging/\" + row.id}>\r\n              <Button color=\"dark\" className=\"mr-2\">\r\n                <FontAwesomeIcon icon={faInfo} /> Detail\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      {props.getLoggingList ? (\r\n        <div>\r\n          <div>\r\n            <Row>\r\n              <Col>\r\n                <Card style={{ width: \"18rem\" }}>\r\n                  <Card.Body className=\"text-center\">\r\n                    <Card.Title>JUMLAH LOGGING</Card.Title>\r\n                    <Card.Text>{props.HitungLogging}</Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <br />\r\n          <ToolkitProvider\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={props.getLoggingList}\r\n            columns={columns}\r\n            defaultSorted={defaultSorted}\r\n            search\r\n          >\r\n            {(props) => (\r\n              <div>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"float-right\">\r\n                      <SearchBar {...props.searchProps} placeholder=\"Cari..\" />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <BootstrapTable\r\n                  {...props.baseProps}\r\n                  pagination={paginationFactory()}\r\n                />\r\n              </div>\r\n            )}\r\n          </ToolkitProvider>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorLoggingList ? (\r\n            <h4>{props.errorLoggingList}</h4>\r\n          ) : (\r\n            <Spinner color=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableLoggingLimited);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\nimport TableLoggingFullAccess from \"../components/TableLoggingFullAccess\";\r\nimport TableLoggingLimited from \"../components/TableLoggingLimited\";\r\nimport { getLoggingList, deleteLogging } from \"../actions/inventoryAction\";\r\n\r\nclass LoggingContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    const roleuser = localStorage.getItem(\"roleuser\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n      roleuser,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getLoggingList());\r\n    this.props.dispatch(deleteLogging());\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.loggedin === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    if (this.state.roleuser === \"29,30,31,32,33,34,35,36\") {\r\n      return (\r\n        <div>\r\n          <NavbarComponent />\r\n          <TableLoggingFullAccess />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <NavbarComponent />\r\n          <TableLoggingLimited />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect()(LoggingContainer);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default withRouter(({ history }) => {\r\n  return (\r\n    <div>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <Button color=\"dark\" onClick={() => history.goBack()}>\r\n            <FontAwesomeIcon icon={faArrowLeft} /> Back\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n});\r\n","const InventoryValidation = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.name || values.name === \"\") {\r\n    errors.nama = \"Nama harus diisi\";\r\n  }\r\n\r\n  if (!values.qty || values.qrt === \"\") {\r\n    errors.qty = \"Jumlah harus diisi\";\r\n  }\r\n\r\n  return errors\r\n};\r\n\r\nexport default InventoryValidation;\r\n","import React, { Component } from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport InventoryValidation from \"../validations/InventoryValidation\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  type,\r\n  placeholder,\r\n  label,\r\n  disabled,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <Row>\r\n    <Col md=\"12\">\r\n      <Label htmlFor=\"{input}\" className=\"col-form-label\">\r\n        {label}\r\n      </Label>\r\n    </Col>\r\n    <Col md=\"12\">\r\n      <Input\r\n        {...input}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        readOnly={readOnly}\r\n      ></Input>\r\n      {touched &&\r\n        ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\r\n          (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      logical_uid: state.inventorys.getInventoryDetail.logical_uid,\r\n      name: state.inventorys.getInventoryDetail.name,\r\n      qty: state.inventorys.getInventoryDetail.qty,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormInventory extends Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <FormGroup row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"name\"\r\n                component={renderField}\r\n                label=\"Nama :\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"qty\"\r\n                component={renderField}\r\n                label=\"Jumlah :\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Button\r\n                color=\"dark\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormInventory  = reduxForm({\r\n  form: \"formCreateInventory\",\r\n  validate: InventoryValidation,\r\n  enableReinitialize: true,\r\n})(FormInventory);\r\nexport default connect(mapStateToProps, null)(FormInventory);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport BackComponent from \"../components/BackComponent\";\r\nimport FormInventory from \"../components/FormInventory\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport { postInventoryCreate } from \"../actions/inventoryAction\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponDataInventory: state.inventorys.getResponDataInventory,\r\n    errorResponDataInventory: state.inventorys.errorResponDataInventory,\r\n  };\r\n};\r\n\r\nclass CreateInventoryContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n    };\r\n  }\r\n  handleSubmit(data) {\r\n    this.props.dispatch(postInventoryCreate(data));\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      this.props.getResponDataInventory ||\r\n      this.props.errorResponDataInventory\r\n    ) {\r\n      if (this.props.errorResponDataInventory) {\r\n        swal(\"Failed!\", this.props.errorResponDataInventory, \"error\");\r\n      } else {\r\n        swal(\r\n          \"Inventory Created!\",\r\n          \"Nama : \" +\r\n            this.props.getResponDataInventory.nama +\r\n            \" , Umur : \" +\r\n            this.props.getResponDataInventory.umur,\r\n          \"success\"\r\n        );\r\n      }\r\n    }\r\n    if (this.state.loggedin === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <NavbarComponent />\r\n        <Container>\r\n          <BackComponent />\r\n          <h1>Create Inventory</h1>\r\n          <FormInventory onSubmit={(data) => this.handleSubmit(data)} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CreateInventoryContainer);\r\n","import BackComponent from \"../components/BackComponent\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport FormInventory from \"../components/FormInventory\";\r\nimport {\r\n  getInventoryDetail,\r\n  putInventoryUpdate,\r\n} from \"../actions/inventoryAction\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponDataInventory: state.inventorys.getResponDataInventory,\r\n    errorResponDataInventory: state.inventorys.errorResponDataInventory,\r\n  };\r\n};\r\n\r\nclass EditInventoryContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(\r\n      getInventoryDetail(this.props.match.params.logical_uid)\r\n    );\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.props.dispatch(\r\n      putInventoryUpdate(data, this.props.match.params.logical_uid)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loggedin === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    if (\r\n      this.props.getResponDataInventory ||\r\n      this.props.errorResponDataInventory\r\n    ) {\r\n      if (this.props.errorResponDataInventory) {\r\n        swal(\"Failed!\", this.props.errorResponDataInventory, \"error\");\r\n      } else {\r\n        swal(\r\n          \"Inventory Updated!\",\r\n          \"Nama : \" +\r\n            this.props.getResponDataInventory.name +\r\n            \" , Jumlah : \" +\r\n            this.props.getResponDataInventory.qty,\r\n          \"success\"\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <NavbarComponent />\r\n        <Container>\r\n          <BackComponent />\r\n          <h1>Edit Inventory</h1>\r\n          <FormInventory onSubmit={(data) => this.handleSubmit(data)} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(EditInventoryContainer);\r\n","import React, { Component } from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport InventoryValidation from \"../validations/InventoryValidation\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  type,\r\n  placeholder,\r\n  label,\r\n  disabled,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <Row>\r\n    <Col md=\"12\">\r\n      <Label htmlFor=\"{input}\" className=\"col-form-label\">\r\n        {label}\r\n      </Label>\r\n    </Col>\r\n    <Col md=\"12\">\r\n      <Input\r\n        {...input}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        readOnly={readOnly}\r\n      ></Input>\r\n      {touched &&\r\n        ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\r\n          (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.inventorys.getLoggingDetail.id,\r\n      warehouse: state.inventorys.getLoggingDetail.warehouse,\r\n      qty: state.inventorys.getLoggingDetail.qty,\r\n      status: state.inventorys.getLoggingDetail.status,\r\n      time: state.inventorys.getLoggingDetail.time,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormLogging extends Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <FormGroup row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"warehouse\"\r\n                component={renderField}\r\n                label=\"Warehouse :\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"qty\"\r\n                component={renderField}\r\n                label=\"Jumlah :\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Button\r\n                color=\"dark\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormLogging  = reduxForm({\r\n  form: \"formCreateInventory\",\r\n  validate: InventoryValidation,\r\n  enableReinitialize: true,\r\n})(FormLogging);\r\nexport default connect(mapStateToProps, null)(FormLogging);\r\n","import BackComponent from \"../components/BackComponent\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport FormLogging from \"../components/FormLogging\";\r\nimport { getLoggingDetail, putLoggingUpdate } from \"../actions/inventoryAction\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponDataLogging: state.inventorys.getResponDataLogging,\r\n    errorResponDataLogging: state.inventorys.errorResponDataLogging,\r\n  };\r\n};\r\n\r\nclass EditLoggingContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getLoggingDetail(this.props.match.params.id));\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.props.dispatch(putLoggingUpdate(data, this.props.match.params.id));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loggedin === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    if (this.props.getResponDataLogging || this.props.errorResponDataLogging) {\r\n      if (this.props.errorResponDataLogging) {\r\n        swal(\"Failed!\", this.props.errorResponDataLogging, \"error\");\r\n      } else {\r\n        swal(\"Logging Updated!\");\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <NavbarComponent />\r\n        <Container>\r\n          <BackComponent />\r\n          <h1>Edit Logging</h1>\r\n          <FormLogging onSubmit={(data) => this.handleSubmit(data)} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(EditLoggingContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoggingDetail: state.inventorys.getLoggingDetail,\r\n    errorLoggingDetail: state.inventorys.errorLoggingDetail,\r\n  };\r\n};\r\n\r\nconst DetailLoggingComponent = (props) => {\r\n  return (\r\n    <Table striped>\r\n      <tbody>\r\n        <tr>\r\n          <td width=\"200\">Nama</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getLoggingDetail.name}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"200\">Jumlah</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getLoggingDetail.qty}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"200\">Status</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getLoggingDetail.status}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"200\">Warehouse</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getLoggingDetail.warehouse}</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailLoggingComponent);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\nimport BackComponent from \"../components/BackComponent\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLoggingDetail } from \"../actions/inventoryAction\";\r\nimport DetailLoggingComponent from \"../components/DetailLoggingComponent\";\r\n\r\nclass DetailLoggingContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(\r\n      getLoggingDetail(this.props.match.params.id)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loggedin === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <NavbarComponent />\r\n        <Container>\r\n          <BackComponent />\r\n          <h1>Detail Inventory</h1>\r\n          <DetailLoggingComponent />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(DetailLoggingContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getInventoryDetail: state.inventorys.getInventoryDetail,\r\n    errorInventoryDetail: state.inventorys.errorInventoryDetail,\r\n  };\r\n};\r\n\r\nconst DetailInventoryComponent = (props) => {\r\n  return (\r\n    <Table striped>\r\n      <tbody>\r\n        <tr>\r\n          <td width=\"200\">Nama</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getInventoryDetail.name}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"200\">Jumlah</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getInventoryDetail.qty}</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailInventoryComponent);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\nimport BackComponent from \"../components/BackComponent\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getInventoryDetail } from \"../actions/inventoryAction\";\r\nimport DetailInventoryComponent from \"../components/DetailInventoryComponent\";\r\n\r\nclass DetailInventoryContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(\r\n      getInventoryDetail(this.props.match.params.logical_uid)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loggedin === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <NavbarComponent />\r\n        <Container>\r\n          <BackComponent />\r\n          <h1>Detail Inventory</h1>\r\n          <DetailInventoryComponent />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(DetailInventoryContainer);\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Button, Col, Container, Row  } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"logical_uid\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getInventoryList: state.inventorys.getInventoryList,\r\n    errorInventoryList: state.inventorys.errorInventoryList,\r\n  };\r\n};\r\n\r\nconst TableInventoryLimited = (props) => {\r\n  const columns = [\r\n    {\r\n      dataField: \"logical_uid\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { width: \"10%\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Nama\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"qty\",\r\n      text: \"Jumlah\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { width: \"10%\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"link\",\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { width: \"15%\" };\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <div>\r\n            <Link to={\"DetailInventory/\" + row.logical_uid}>\r\n              <Button color=\"dark\" className=\"mr-2\">\r\n                <FontAwesomeIcon icon={faInfo} /> Detail\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      {props.getInventoryList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"logical_uid\"\r\n          data={props.getInventoryList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"float-right\">\r\n                    <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <BootstrapTable\r\n                {...props.baseProps}\r\n                pagination={paginationFactory()}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorInventorysList ? (\r\n            <h4>{props.errorInventorysList}</h4>\r\n          ) : (\r\n            <Spinner color=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableInventoryLimited);\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faInfo,\r\n  faEdit,\r\n  faTrash,\r\n  faPlus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { deleteInventory } from \"../actions/inventoryAction\";\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, logical_uid) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan menghapus data ini ?\",\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deleteInventory(logical_uid));\r\n      swal(\"Data Inventoruy Sukses dihapus\", {\r\n        icon: \"success\",\r\n      });\r\n    } else {\r\n      swal(\"Data gagal dihapus\");\r\n    }\r\n  });\r\n};\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"logical_uid\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getInventoryList: state.inventorys.getInventoryList,\r\n    errorInventoryList: state.inventorys.errorInventoryList,\r\n  };\r\n};\r\n\r\nconst TableInventoryFullAccess = (props) => {\r\n  const columns = [\r\n    {\r\n      dataField: \"logical_uid\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { width: \"10%\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Nama\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"qty\",\r\n      text: \"Jumlah\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { width: \"10%\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"link\",\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { width: \"30%\" };\r\n      },\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <div>\r\n            <Link to={\"DetailInventory/\" + row.logical_uid}>\r\n              <Button color=\"dark\" className=\"mr-2\">\r\n                <FontAwesomeIcon icon={faInfo} /> Detail\r\n              </Button>\r\n            </Link>\r\n\r\n            <Link to={\"EditInventory/\" + row.logical_uid}>\r\n              <Button color=\"dark\" className=\"mr-2\">\r\n                <FontAwesomeIcon icon={faEdit} /> Edit\r\n              </Button>\r\n            </Link>\r\n\r\n            <Button\r\n              color=\"dark\"\r\n              className=\"mr-2\"\r\n              onClick={() => handleClick(props.dispatch, row.logical_uid)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} /> Delete\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      {props.getInventoryList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"logical_uid\"\r\n          data={props.getInventoryList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n          noDataIndication=\"Table is Empty\"\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Row>\r\n                <Col>\r\n                  <Link to=\"/Create\">\r\n                    <Button color=\"dark\" className=\"mr-2\">\r\n                      <FontAwesomeIcon icon={faPlus} /> Create\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"float-right\">\r\n                    <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <BootstrapTable\r\n                {...props.baseProps}\r\n                pagination={paginationFactory()}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorInventorysList ? (\r\n            <h4>{props.errorInventorysList}</h4>\r\n          ) : (\r\n            <Spinner color=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableInventoryFullAccess);","import React, { Component } from \"react\";\r\nimport TableInventoryLimited from \"../components/TableInventoryLimited\";\r\nimport TableInventoryFullAccess from \"../components/TableInventoryFullAccess\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getInventoryList,\r\n  deleteDataInventory,\r\n} from \"../actions/inventoryAction\";\r\n\r\n\r\nclass InventoryContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    const roleuser = localStorage.getItem(\"roleuser\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n      roleuser,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getInventoryList());\r\n    this.props.dispatch(deleteDataInventory());\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loggedin === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    if (this.state.roleuser === \"29,30,31,32,33,34,35,36\") {\r\n      return (\r\n        <div>\r\n          <NavbarComponent />\r\n          <TableInventoryFullAccess />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <NavbarComponent />\r\n          <TableInventoryLimited />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect()(InventoryContainer);\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst ProfilComponent = () => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n \r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilComponent;\r\n","import React, { Component } from \"react\";\r\nimport ProfilComponent from \"../components/ProfilComponent\";\r\n\r\nexport default class ProflContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ProfilComponent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default class LoginContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      username: this.username,\r\n      password: this.password,\r\n    };\r\n    \r\n    axios\r\n      .post(\"https://smpnapi.herokuapp.com/token-auth/\", data)\r\n      .then((res) => {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        localStorage.setItem(\"roleuser\", res.data.user.user_permissions);\r\n        this.setState({\r\n          loggedin: true,\r\n        });\r\n        window.location.reload(); // BUAT REFRESH PAGE\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    if (this.state.loggedin) {\r\n      return <Redirect to=\"/Logging\" />;\r\n    }\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={useStyles.paper}>\r\n          <div className=\"text-center\">\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n          </div>\r\n          <form className={useStyles.form} onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              onChange={(e) => (this.username = e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => (this.password = e.target.value)}\r\n            />\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getInventoryList: state.inventorys.getInventoryList,\r\n    errorInventoryList: state.inventorys.errorInventoryList,\r\n    HitungInventory: state.inventorys.getInventoryList.length,\r\n  };\r\n};\r\n\r\nconst AnalitikComponent = (props) => {\r\n  let x = [];\r\n  let y = [];\r\n  let z = [];\r\n  let a = [];\r\n  let b = [];\r\n  let c = [];\r\n  for (let i = 0; i < props.HitungInventory; i++) {\r\n    x[i] = props.getInventoryList[i].qty;\r\n    y[i] = props.getInventoryList[i].name;\r\n  }\r\n\r\n  for (let i = 0; i < y.length; i++) {\r\n    if (x[i] < 50) {\r\n      a[i] = x[i];\r\n      z[i] = y[i];\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < y.length; i++) {\r\n    if (x[i] > 50) {\r\n      b[i] = x[i];\r\n      c[i] = y[i];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {props.getInventoryList ? (\r\n        <div>\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>JUMLAH BARANG YANG DIBAWAH 50</Card.Title>\r\n                  <Card.Text>\r\n                    {z} : {a}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>JUMLAH BARANG YANG DIATAS 50</Card.Title>\r\n                  <Card.Text>\r\n                    {c} : {b} <br></br>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorInventoryList ? (\r\n            <h4>{props.errorInventoryList}</h4>\r\n          ) : (\r\n            <Spinner color=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AnalitikComponent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getLoggingList , getInventoryList } from \"../actions/inventoryAction\";\r\n\r\nimport AnalitikComponent from \"../components/AnalitikComponent\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\n\r\n\r\nclass AnalitikContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getLoggingList());\r\n    this.props.dispatch(getInventoryList());\r\n  }\r\n  render() {\r\n    if (this.state.loggedin === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <NavbarComponent />\r\n        <AnalitikComponent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(AnalitikContainer);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class LogoutContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"roleuser\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Redirect to=\"/\"></Redirect>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class my404 extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <h1>HALAMAN YANG KAMU CARI SALAH</h1>\r\n        <a href=\"/\">KEMBALI KE 0 YA</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport LoggingContainer from \"./containers/LoggingContainer\";\r\nimport CreateInventoryContainer from \"./containers/CreateInventoryContainer\";\r\nimport EditInventoryContainer from \"./containers/EditInventoryContainer\";\r\nimport EditLoggingContainer from \"./containers/EditLoggingContainer\";\r\nimport DetailLoggingContainer from \"./containers/DetailLoggingContainer\";\r\nimport DetailInventoryContainer from \"./containers/DetailInventoryContainer\";\r\nimport InventoryContainer from \"./containers/InventoryContainer\";\r\nimport ProfilContainer from \"./containers/ProfilContainer\";\r\nimport LoginContainer from \"./containers/LoginContainer\";\r\nimport AnalitikContainer from \"./containers/AnalitikContainer\";\r\nimport LogoutContainer from \"./containers/LogoutContainer\";\r\nimport my404 from \"./containers/my404\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const roleuser = localStorage.getItem(\"roleuser\");\r\n\r\n    this.state = {\r\n      roleuser,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.roleuser === \"29,30,31,32,33,34,35,36\") {\r\n      return (\r\n        <div>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={LoginContainer} />\r\n            <Route path=\"/Logging\" exact component={LoggingContainer} />\r\n            <Route path=\"/Create\" exact component={CreateInventoryContainer} />\r\n            <Route path=\"/DetailInventory/:logical_uid\" component={DetailInventoryContainer} />\r\n            <Route path=\"/EditInventory/:logical_uid\" exact component={EditInventoryContainer} />\r\n            <Route path=\"/EditLogging/:id\" exact component={EditLoggingContainer} />\r\n            <Route path=\"/DetailLogging/:id\" exact component={DetailLoggingContainer} />\r\n            <Route path=\"/Inventory\" exact component={InventoryContainer} />\r\n            <Route path=\"/Analitik\" exact component={AnalitikContainer} />\r\n            <Route path=\"/Profil\" exact component={ProfilContainer} />\r\n            <Route path=\"/Logout\" exact component={LogoutContainer} />\r\n            <Route path=\"*\" exact component={my404} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n      );\r\n    } else {\r\n      return (\r\n      <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={LoginContainer} />\r\n          <Route path=\"/Logging\" exact component={LoggingContainer} />\r\n          <Route path=\"/DetailInventory/:logical_uid\" component={DetailInventoryContainer} />\r\n          <Route path=\"/DetailLogging/:id\" exact component={DetailLoggingContainer} />\r\n          <Route path=\"/Inventory\" exact component={InventoryContainer} />\r\n          <Route path=\"/Analitik\" exact component={AnalitikContainer} />\r\n          <Route path=\"/Logout\" exact component={LogoutContainer} />\r\n          <Route path=\"*\" exact component={my404} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n    );\r\n    }\r\n\r\n\r\n \r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  GET_INVENTORY_LIST,\r\n  GET_INVENTORY_DETAIL,\r\n  POST_INVENTORY_CREATE,\r\n  PUT_INVENTORY_EDIT,\r\n  PUT_LOGGING_EDIT,\r\n  GET_LOGGING_LIST,\r\n  GET_LOGGING_DETAIL,\r\n} from \"../actions/inventoryAction\";\r\n\r\nlet initialState = {\r\n  getInventoryList: false,\r\n  errorInventoryList: false,\r\n  getInventoryDetail: false,\r\n  errorInventoryDetail: false,\r\n  getResponDataInventory: false,\r\n  errorResponDataInventory: false,\r\n  getLoggingList: false,\r\n  errorLoggingList: false,\r\n  hitungLogging: false,\r\n  getLoggingDetail: false,\r\n  errorLoggingDetail: false,\r\n  title: \"Pervasive\",\r\n};\r\n\r\nconst inventorys = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_INVENTORY_LIST:\r\n      return {\r\n        ...state,\r\n        getInventoryList: action.payload.data,\r\n        errorInventoryList: action.payload.errorMessage,\r\n      };\r\n    case GET_LOGGING_LIST:\r\n      return {\r\n        ...state,\r\n        getLoggingList: action.payload.data,\r\n        errorLoggingList: action.payload.errorMessage,\r\n      };\r\n    case GET_INVENTORY_DETAIL:\r\n      return {\r\n        ...state,\r\n        getInventoryDetail: action.payload.data,\r\n        errorInventoryDetail: action.payload.errorMessage,\r\n      };\r\n\r\n    case POST_INVENTORY_CREATE:\r\n      return {\r\n        ...state,\r\n        getResponDataInventory: action.payload.data,\r\n        errorResponDataInventory: action.payload.errorMessage,\r\n      };\r\n\r\n    case PUT_INVENTORY_EDIT:\r\n      return {\r\n        ...state,\r\n        getResponDataInventory: action.payload.data,\r\n        errorResponDataInventory: action.payload.errorMessage,\r\n      };\r\n\r\n    case PUT_LOGGING_EDIT:\r\n      return {\r\n        ...state,\r\n        getResponDataLogging: action.payload.data,\r\n        errorResponDataLogging: action.payload.errorMessage,\r\n      };\r\n\r\n    case GET_LOGGING_DETAIL:\r\n      return {\r\n        ...state,\r\n        getLoggingDetail: action.payload.data,\r\n        errorLoggingDetail: action.payload.errorMessage,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default inventorys;\r\n","import { combineReducers } from 'redux'\r\nimport inventorys from './inventorys'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nexport default combineReducers({\r\n    inventorys,\r\n    form: formReducer\r\n})","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}